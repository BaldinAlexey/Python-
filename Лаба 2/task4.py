class Servo:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–∞."""

    def __init__(self, angle=0.0, speed=0.0, acceleration=0.0, power=0.0):
        self._angle = angle
        self._speed = speed
        self._acceleration = acceleration
        self._power = power  # –º–æ—â–Ω–æ—Å—Ç—å ‚Äî –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è

    def __str__(self):
        return f"Servo(—É–≥–æ–ª={self._angle}, —Å–∫–æ—Ä–æ—Å—Ç—å={self._speed}, —É—Å–∫–æ—Ä–µ–Ω–∏–µ={self._acceleration}, –º–æ—â–Ω–æ—Å—Ç—å={self._power})"

    def __repr__(self):
        return f"Servo({self._angle}, {self._speed}, {self._acceleration}, {self._power})"

    def __eq__(self, other):
        return self._power == other._power

    def __lt__(self, other):
        return self._power < other._power

    def rotate(self, delta_angle):
        """–ü–æ–≤–µ—Ä–Ω—É—Ç—å –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π —É–≥–æ–ª."""
        self._angle += delta_angle
        print(f"–ü–æ–≤–æ—Ä–æ—Ç: –Ω–æ–≤—ã–π —É–≥–æ–ª = {self._angle}")

    def move(self, delta_speed):
        """–ò–∑–º–µ–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è."""
        self._speed += delta_speed
        print(f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏: –Ω–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å = {self._speed}")


class RotationalServo(Servo):
    """–ö–ª–∞—Å—Å –≤—Ä–∞—â–∞—Ç–µ–ª—å–Ω–æ–≥–æ –¥–≤–∏–≥–∞—Ç–µ–ª—è (–Ω–∞—Å–ª–µ–¥—É–µ—Ç Servo)."""

    def __init__(self, angle=0.0, speed=0.0, acceleration=0.0, power=0.0, rotation_axis="Z"):
        super().__init__(angle, speed, acceleration, power)
        self._rotation_axis = rotation_axis

    def __str__(self):
        return f"RotationalServo(–æ—Å—å={self._rotation_axis}, —É–≥–æ–ª={self._angle}, –º–æ—â–Ω–æ—Å—Ç—å={self._power})"

    def __repr__(self):
        return f"RotationalServo({self._rotation_axis}, {self._angle}, {self._speed}, {self._acceleration}, {self._power})"


class SynchronousServo(RotationalServo):
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥ ‚Äî –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø –≤—Ä–∞—â–∞—Ç–µ–ª—å–Ω–æ–≥–æ –¥–≤–∏–≥–∞—Ç–µ–ª—è."""

    def __init__(self, angle=0.0, speed=0.0, acceleration=0.0, power=0.0, rotation_axis="Z", frequency=50):
        super().__init__(angle, speed, acceleration, power, rotation_axis)
        self._frequency = frequency  # —á–∞—Å—Ç–æ—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏

    def __str__(self):
        return f"SynchronousServo(–æ—Å—å={self._rotation_axis}, —É–≥–æ–ª={self._angle}, –º–æ—â–Ω–æ—Å—Ç—å={self._power}, —á–∞—Å—Ç–æ—Ç–∞={self._frequency} –ì—Ü)"

    def __repr__(self):
        return f"SynchronousServo({self._rotation_axis}, {self._angle}, {self._speed}, {self._acceleration}, {self._power}, {self._frequency})"


class Manipulator:
    """–ú–æ–¥–µ–ª—å —à–µ—Å—Ç–∏–∑–≤–µ–Ω–Ω–æ–≥–æ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–∞."""

    def __init__(self):
        self._segments = []

    def add_servo(self, servo):
        """–î–æ–±–∞–≤–∏—Ç—å –∑–≤–µ–Ω–æ –≤ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä."""
        self._segments.append(servo)

    def __add__(self, vector):
        """
        –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ +
        vector ‚Äî –∫–æ—Ä—Ç–µ–∂ –∏–ª–∏ —Å–ø–∏—Å–æ–∫ —Å —É–≥–ª–∞–º–∏ –ø–æ–≤–æ—Ä–æ—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–≤–µ–Ω–∞
        """
        if len(vector) != len(self._segments):
            print("‚ö†Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –≤–µ–∫—Ç–æ—Ä–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–≤–µ–Ω—å–µ–≤")
            return self

        for servo, delta in zip(self._segments, vector):
            servo.rotate(delta)

        return self

    def __str__(self):
        return " -> ".join(str(servo) for servo in self._segments)

    def __repr__(self):
        return f"Manipulator({self._segments})"


def main():
    # —Å–æ–∑–¥–∞—ë–º –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä
    manipulator = Manipulator()

    # –¥–æ–±–∞–≤–ª—è–µ–º 6 —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤
    for i in range(6):
        manipulator.add_servo(SynchronousServo(angle=0, power=10 + i, rotation_axis="Z", frequency=60))

    print("ü§ñ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä–∞:")
    print(manipulator)

    # –¥–≤–∏–≥–∞–µ–º –≤—Å–µ –∑–≤–µ–Ω—å—è –Ω–∞ —Ä–∞–∑–Ω—ã–µ —É–≥–ª—ã
    angles = [10, 15, -5, 20, -10, 30]
    manipulator + angles

    print("\nüìà –ü–æ—Å–ª–µ –¥–≤–∏–∂–µ–Ω–∏—è:")
    print(manipulator)

    # —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤ –ø–æ –º–æ—â–Ω–æ—Å—Ç–∏
    s1 = SynchronousServo(power=50)
    s2 = SynchronousServo(power=60)
    print("\n‚öñÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–æ—â–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤:")
    print(s1 == s2)  # False
    print(s1 < s2)   # True


if __name__ == "__main__":
    main()
