# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–µ—Å—Ç—Ä –ø–ª–∞–≥–∏–Ω–æ–≤
PluginRegistry = {}


class Plugin:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞–≥–∏–Ω–æ–≤."""

    name = None  # —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ø–ª–∞–≥–∏–Ω–∞

    def __init_subclass__(cls, **kwargs):
        """
        –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–∫–ª–∞—Å—Å–∞.
        –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –ø–ª–∞–≥–∏–Ω –≤ —Ä–µ–µ—Å—Ç—Ä–µ PluginRegistry.
        """
        super().__init_subclass__(**kwargs)
        if cls.name is None:
            raise ValueError(f"–ö–ª–∞—Å—Å {cls.__name__} –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –∞—Ç—Ä–∏–±—É—Ç name")
        if cls.name in PluginRegistry:
            raise ValueError(f"–ü–ª–∞–≥–∏–Ω —Å –∏–º–µ–Ω–µ–º '{cls.name}' —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")

        PluginRegistry[cls.name] = cls

    def execute(self, data):
        """–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥: –≤—Å–µ –ø–ª–∞–≥–∏–Ω—ã –æ–±—è–∑–∞–Ω—ã –µ–≥–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å."""
        raise NotImplementedError("–ú–µ—Ç–æ–¥ execute() –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω –≤ –ø–æ–¥–∫–ª–∞—Å—Å–µ")


class UpperCasePlugin(Plugin):
    """–ü–ª–∞–≥–∏–Ω: –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä."""

    name = "upper"

    def execute(self, data):
        return data.upper()


class ReversePlugin(Plugin):
    """–ü–ª–∞–≥–∏–Ω: –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∑–∞–¥–æ–º –Ω–∞–ø–µ—Ä—ë–¥."""

    name = "reverse"

    def execute(self, data):
        return data[::-1]


class ReplaceSpacesPlugin(Plugin):
    """–ü–ª–∞–≥–∏–Ω: –∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏—è."""

    name = "replace_spaces"

    def execute(self, data):
        return data.replace(" ", "_")


def main():
    print("üîå –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã:", list(PluginRegistry.keys()))

    text = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ").strip()

    plugin_name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–ª–∞–≥–∏–Ω–∞ (upper / reverse / replace_spaces): ").strip()
    if plugin_name not in PluginRegistry:
        print(f"–ü–ª–∞–≥–∏–Ω '{plugin_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    plugin_class = PluginRegistry[plugin_name]
    plugin_instance = plugin_class()

    result = plugin_instance.execute(text)
    print("–†–µ–∑—É–ª—å—Ç–∞—Ç:", result)


if __name__ == "__main__":
    main()
