from abc import ABC, abstractmethod


class Vehicle(ABC):
    """–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤."""

    def __init__(self, vehicle_type):
        self._vehicle_type = vehicle_type

    @abstractmethod
    def get_max_speed(self):
        """–í–µ—Ä–Ω—É—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –¢–°."""
        pass

    @abstractmethod
    def get_vehicle_type(self):
        """–í–µ—Ä–Ω—É—Ç—å —Ç–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤–∞."""
        pass

    def __str__(self):
        return f"–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: {self._vehicle_type}"

    def __repr__(self):
        return f"Vehicle({self._vehicle_type})"


class RoadVehicle(Vehicle):
    """–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –ø–æ–¥–∫–ª–∞—Å—Å –¥–ª—è –Ω–∞–∑–µ–º–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤."""

    def __init__(self, vehicle_type):
        super().__init__(vehicle_type)

    @abstractmethod
    def get_engine_type(self):
        """–í–µ—Ä–Ω—É—Ç—å —Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è."""
        pass


class Car(RoadVehicle):
    """–ö–ª–∞—Å—Å –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è."""

    def __init__(self, car_type, engine_type, max_speed=180):
        super().__init__("–ê–≤—Ç–æ–º–æ–±–∏–ª—å")
        self._car_type = car_type
        self._engine_type = engine_type
        self._max_speed = max_speed

    def get_max_speed(self):
        return self._max_speed

    def get_vehicle_type(self):
        return self._vehicle_type

    def get_engine_type(self):
        return self._engine_type

    def __str__(self):
        return f"{self._vehicle_type} ({self._car_type}), –¥–≤–∏–≥–∞—Ç–µ–ª—å: {self._engine_type}, –º–∞–∫—Å. —Å–∫–æ—Ä–æ—Å—Ç—å: {self._max_speed} –∫–º/—á"

    def __repr__(self):
        return f"Car({self._car_type}, {self._engine_type}, {self._max_speed})"


class Bicycle(RoadVehicle):
    """–ö–ª–∞—Å—Å –¥–ª—è –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞."""

    def __init__(self, bicycle_type, max_speed=40):
        super().__init__("–í–µ–ª–æ—Å–∏–ø–µ–¥")
        self._bicycle_type = bicycle_type
        self._engine_type = "–º—É—Å–∫—É–ª—å–Ω–∞—è —Å–∏–ª–∞"
        self._max_speed = max_speed

    def get_max_speed(self):
        return self._max_speed

    def get_vehicle_type(self):
        return self._vehicle_type

    def get_engine_type(self):
        return self._engine_type

    def __str__(self):
        return f"{self._vehicle_type} ({self._bicycle_type}), –¥–≤–∏–≥–∞—Ç–µ–ª—å: {self._engine_type}, –º–∞–∫—Å. —Å–∫–æ—Ä–æ—Å—Ç—å: {self._max_speed} –∫–º/—á"

    def __repr__(self):
        return f"Bicycle({self._bicycle_type}, {self._max_speed})"


def main():
    car = Car("—Å–µ–¥–∞–Ω", "—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π", 200)
    bicycle = Bicycle("–≥–æ—Ä–Ω—ã–π", 35)

    print("üöò –ê–≤—Ç–æ–º–æ–±–∏–ª—å:")
    print(car)
    print("–¢–∏–ø –¢–°:", car.get_vehicle_type())
    print("–¢–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è:", car.get_engine_type())
    print("–ú–∞–∫—Å. —Å–∫–æ—Ä–æ—Å—Ç—å:", car.get_max_speed())

    print("\nüö≤ –í–µ–ª–æ—Å–∏–ø–µ–¥:")
    print(bicycle)
    print("–¢–∏–ø –¢–°:", bicycle.get_vehicle_type())
    print("–¢–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è:", bicycle.get_engine_type())
    print("–ú–∞–∫—Å. —Å–∫–æ—Ä–æ—Å—Ç—å:", bicycle.get_max_speed())


if __name__ == "__main__":
    main()
